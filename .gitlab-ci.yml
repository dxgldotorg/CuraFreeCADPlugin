stages:
  - verify
  - build
  - publish

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GITHUB_MIRROR_URL: https://github.com/thopiekar/CuraFreeCadPlugin.git
  GITHUB_MIRROR_NAME: github-mirror
  PYCODESTYLE_ARGS: --max-line-length=120 --exclude=./*/CadIntegrationUtils/3rd-party/*

codestyle-pep8:
  stage: verify
  tags:
    - os:ubuntu
    - package:pycodestyle
    - type:shell
  script:
    - pycodestyle --show-source --show-pep8 ${PYCODESTYLE_ARGS} . || pycodestyle --statistics ${PYCODESTYLE_ARGS} -q .
  only:
    - triggers
    - branches
    - tags

check-ciu-stable:
  stage: verify
  tags:
    - os:ubuntu
    - type:shell
  script:
    - cd ./*/CadIntegrationUtils/
    - git fetch --all --tags
    - export CIU_LATEST_STABLE=$(git rev-list -n 1 stable)
    - export CIU_CURRENT=$(git rev-parse HEAD)
    - 'echo "CURRENT: ${CIU_CURRENT}"'
    - 'echo "LATEST_STABLE: ${CIU_LATEST_STABLE}"'
    - '[[ "${CIU_CURRENT}" == "${CIU_LATEST_STABLE}" ]] && exit 0 || exit 1'
  only:
    - triggers
    - merge_requests
    - tags

package:
  stage: build
  tags:
    - os:ubuntu
    - package:python3
    - type:shell
  script:
    - curl https://git.thopiekar.eu/Cura/plugins/CuraPluginOven/raw/deployment/cpo.py?inline=false --output cpo.py
    - python3 ./cpo.py --create=package610 --source=./
    - python3 ./cpo.py --create=package600 --source=./
    - python3 ./cpo.py --create=source --source=./
  only:
    - triggers
    - branches
    - tags
  artifacts:
    paths:
      - ./*.curapackage
      - ./*.curaplugin
      - ./*.umplugin
      - ./*.zip

check-mirror-github:
  stage: publish
  tags:
    - os:ubuntu
    - type:shell
  script:
    - '[[ ! "${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" == "master" ]] && exit 0'
    - git remote add ${GITHUB_MIRROR_NAME} ${GITHUB_MIRROR_URL}
    - git remote update ${GITHUB_MIRROR_NAME}
    - export LATEST_HEAD=$(git rev-parse HEAD)
    - export LATEST_MIRROR=$(git rev-list -n 1 github/master)
    - git remote remove ${GITHUB_MIRROR_NAME}
    - 'echo "LATEST_HEAD: ${LATEST_HEAD}"'
    - 'echo "LATEST_MIRROR: ${LATEST_MIRROR}"'
    - '[[ "${LATEST_HEAD}" == "${LATEST_MIRROR}" ]] && exit 0 || exit 1'
  only:
    - triggers
    - merge_requests
